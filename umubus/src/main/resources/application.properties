spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.virtual-host= /

# CircuitBreaker Properties

resilience4j.circuitbreaker.configs.shared.register-health-indicator=true
#Tipo de circuitBreaker, basado en conteo de fallos
resilience4j.circuitbreaker.configs.shared.sliding-window-type=COUNT_BASED
#Tamanio de la ventana deslizante = numero de conteo que recuerda
resilience4j.circuitbreaker.configs.shared.sliding-window-size=5
#Indica el porcentaje de soporte a fallos de esos 5 del conteo, es decir con que falle uno se abre el circuito
resilience4j.circuitbreaker.configs.shared.failure-rate-threshold=10
#Idem, pero para el tiempo de espera
resilience4j.circuitbreaker.configs.shared.slow-call-rate-threshold=10
#Numero de llamadas permitidas cuando el circuitbreaker esta medio abierto
resilience4j.circuitbreaker.configs.shared.permitted-number-of-calls-in-half-open-state=1
#Tiempo de espera para pasar de medio abierto a cerrado (0, espera infinitamente hasta que se cumpla las llamadas correctas para volver a cerrar)
resilience4j.circuitbreaker.configs.shared.max-wait-duration-in-half-open-state=10s
#Tiempo de espera para pasar de medio abierto a cerrado (0, espera infinitamente hasta que se cumpla las llamadas correctas para volver a cerrar)
resilience4j.circuitbreaker.configs.shared.wait-duration-in-open-state=10s
#Tiempo limite a partir de cual se considera una llamada lenta
resilience4j.circuitbreaker.configs.shared.slow-call-duration-threshold=2s
resilience4j.circuitbreaker.configs.shared.writable-stack-trace-enabled=true
resilience4j.circuitbreaker.configs.shared.automatic-transition-from-open-to-half-open-enabled=true

resilience4j.circuitbreaker.instances.UMUBUSCircuitBreaker.base-config=shared